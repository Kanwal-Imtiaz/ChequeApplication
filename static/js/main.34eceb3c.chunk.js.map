{"version":3,"sources":["components/InputForm.js","components/ChequeBox.js","components/Navigation.js","App.js","serviceWorker.js","index.js"],"names":["initialState","payee","amount","date","amountInWords","payeeError","amountError","dateError","InputForm","props","handleChange","event","isCheckbox","target","type","setState","name","checked","value","validate","state","amountVal","parseInt","console","log","SelectedDate","CurrentDate","Date","setHours","handleSubmit","preventDefault","urlString","fetch","then","response","text","results","onDisplayCheque","onRouteChange","className","id","htmlFor","placeholder","this","onChange","style","fontSize","color","onClick","React","Component","ChequeBox","class","Navigation","display","justifyContent","particlesOptions","particles","number","density","enable","value_area","App","displayCheque","route","params","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.34eceb3c.chunk.js","sourcesContent":["import React from 'react';\n\nconst initialState = {\n  payee: \"\",\n  amount: \"\",\n  date:\"\",\n  amountInWords: \"\",\n  payeeError: \"\",\n  amountError: \"\",\n  dateError:\"\",\n};\n\nclass InputForm extends React.Component\n{\n\tconstructor(props) {\n    super(props);\n    this.state = initialState;\n  }\n\n  handleChange = event => {\n    const isCheckbox = event.target.type === \"checkbox\";\n    this.setState({\n      [event.target.name]: isCheckbox\n        ? event.target.checked\n        : event.target.value\n    });\n  };\n\n  \tvalidate = () => {\n    let payeeError = \"\";\n    let amountError = \"\";\n    let dateError =\"\";\n    // let passwordError = \"\";\n\n    if (!this.state.payee) {\n      payeeError = \"Payee name should not be blank\";\n    }\n\n    if (!this.state.amount) {\n    \tconsole.log(!this.state.amount);\n      amountError = \"Amount should not be blank, enter a valid number\";\n      \n    }\n    else {\n    \t\n    \tlet amountVal = parseInt(this.state.amount);\n    \t//console.log(amountVal);\n    \tif(amountVal <1 || amountVal>(10000000000000-1)){\n     \t amountError = \"Amount should be greater than 0 and smaller than 10000000000000\";\n      \n    \t}\n\t}\n\n\tif(!this.state.date){\n\t\tdateError = \"Date should not be blank\";\n\t}\n\telse{\n\t\tvar SelectedDate = this.state.date;\n\t\tvar CurrentDate = new Date();\n\t\tCurrentDate.setHours(0,0,0,0);\n\t\tSelectedDate = new Date(SelectedDate);\n\t\tSelectedDate.setHours(0,0,0,0);\n\n\t\tif(SelectedDate < CurrentDate){\n\t\t\tdateError = \"Please select a future date, it is an older date\";\n\t\t    //alert('Date should be equal or greater than current date.');\n\t\t}\n\t}\n\n    if (amountError || payeeError || dateError) {\n      this.setState({ amountError, payeeError, dateError});\n      return false;\n    }\n\n    return true;\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const isValid = this.validate();\n    if(isValid){\n    const urlString =\"https://te5299oebg.execute-api.us-west-2.amazonaws.com/prod/\"+this.state.amount;\n    fetch(urlString)\n    .then(response => response.text())\n    .then(results => this.setState({amountInWords:results}//console.log(results))\n    , () => {\n    console.log(this.state);\n    this.props.onDisplayCheque(this.state.payee, this.state.amount, this.state.date, this.state.amountInWords);\n    this.props.onRouteChange('cheque');\n    this.setState(initialState);\n     }));\n\t}\n\t\n  };\n\n\trender(){\n\treturn(\n\n\t\t\t<article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n\t\t\t\t<main className=\"pa4 black-80\">\n\t\t\t\t  <div className=\"measure\">\n\t\t\t\t    <fieldset id=\"input-form\" className=\"ba b--transparent ph0 mh0\">\n\t\t\t\t      <legend className=\"f3 fw6 ph0 mh0\">Input Form</legend>\n\t\t\t\t      <div className=\"mt3\">\n\t\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"payee\">Payee</label>\n\t\t\t\t        <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n\t\t\t\t          name=\"payee\"\n\t\t\t\t          placeholder=\"Enter payee name\"\n\t\t\t\t          value={this.state.payee}\n\t\t\t\t          onChange={this.handleChange}\n\t\t\t\t        />\n\t\t\t\t        <div style={{ fontSize: 12, color: \"red\" }}>\n\t\t            \t{this.state.payeeError}\n\t\t          \t\t</div>\n\t\t\t\t      </div>\n\t\t\t\t      <div className=\"mv3\">\n\t\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"amount\">Amount</label>\n\t\t\t\t        <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n\t\t\t\t          type=\"number\"\n\t\t\t\t          name=\"amount\"\n\t\t\t\t          placeholder=\"Enter amount in $\"\n\t\t\t\t          value={this.state.amount}\n\t\t\t\t          onChange={this.handleChange} \n\t\t\t\t        />\n\t\t\t\t        <div style={{ fontSize: 12, color: \"red\" }}>\n\t\t            \t{this.state.amountError}\n\t\t          \t\t</div>\n\t\t\t\t      </div>\n\t\t\t\t      <div className=\"mv3\">\n\t\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"date\">Date</label>\n\t\t\t\t        <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n\t\t\t\t          type=\"date\"\n\t\t\t\t          name=\"date\"\n\t\t\t\t          placeholder=\"Enter a valid date\"\n\t\t\t\t          value={this.state.date}\n\t\t\t\t          onChange={this.handleChange}\n\t\t\t\t        />\n\t\t\t\t        <div style={{ fontSize: 12, color: \"red\" }}>\n\t\t            \t{this.state.dateError}\n\t\t          \t\t</div>\n\t\t\t\t      </div>\n\t\t\t\t     \n\t\t\t\t    </fieldset>\n\t\t\t\t    <div className=\"\">\n\t\t\t\t      <input className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"Submit\" onClick={this.handleSubmit}/>\n\t\t\t\t    </div>\n\t\t\t\t  </div>\n\t\t\t\t</main>\n\t\t\t</article>\n\n\t\t\t/*<form onSubmit={this.handleSubmit}>\n\t        <div>\n\t\t        <input\n\t\t          name=\"payee\"\n\t\t          placeholder=\"Enter payee name\"\n\t\t          value={this.state.payee}\n\t\t          onChange={this.handleChange}\n\t\t        />\n\t\t        <div style={{ fontSize: 12, color: \"red\" }}>\n            \t{this.state.payeeError}\n          \t\t</div>\n\t        </div>\n\t         <div>\n\t\t        <input\n\t\t          type=\"number\"\n\t\t          name=\"amount\"\n\t\t          placeholder=\"Enter amount in $\"\n\t\t          value={this.state.amount}\n\t\t          onChange={this.handleChange}\n\t\t        />\n\t\t        <div style={{ fontSize: 12, color: \"red\" }}>\n            \t{this.state.amountError}\n          \t\t</div>\n\t        </div>\n\t        <div>\n\t\t        <input\n\t\t          type=\"date\"\n\t\t          name=\"date\"\n\t\t          placeholder=\"Enter a valid date\"\n\t\t          value={this.state.date}\n\t\t          onChange={this.handleChange}\n\t\t        />\n\t\t        <div style={{ fontSize: 12, color: \"red\" }}>\n            \t{this.state.dateError}\n          \t\t</div>\n\t        </div>\n \n\t        <button type=\"submit\">submit</button>\n\t      </form>\n\t\t</div>\n\t\t*/\n\t\t);\n}\n}\n\nexport default InputForm;","import React from 'react';\nimport './ChequeBox.css';\n\nfunction ChequeBox({payee,amount, amountInWords, date})\n{\n\t\treturn(\n\t\t\t<div>\n\n \t\t\t\t\n\n\t\t\t\t<article className=\"center mw5 mw7-ns bg-light-blue ba bw1 ph5-ns\">\n\t\t\t\t\t \n\t\t\t\t  <div className='column'>\n\t\t\t\t\t<h1 class=\"f4 bg-dark-blue br3 mr5 br--top white pv2 \">Payment cheque </h1>\n\t\t\t\t\t<div className= 'container center'>\n\t\t\t\t\t\t<p className='f4 pa2 w-60 center'>  PAY  <div className='boxBottom'> {payee}  </div> </p>\n\t\t\t\t\t\t<p className='w-40 f4 pa2 mr5 end'>  DATE  <div className='boxBottom'> {date} </div> </p>\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t\t<div className='container center'>\n\t\t\t\t\t\t<p className='f4 pa2 w-70 center'>  <div className='boxBottom'> {amountInWords} </div> </p>\n\t\t\t\t\t\t<p className='w-30 f4 pa25 mr5 end'>   $ <div className='box'>  {amount} </div> </p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t  \n\t\t\t\t</article>\n\n\t\t\t</div>\n\n\t\t\t\n\t\t\t/*  <p >\n\t\t\t   Payee: {payee} , Amount: {amount} \n\t\t\t\tdate: {date} , amountInWords:  {amountInWords}\n\t\t\t  </p>*/\n\t\t\t \n\n\n\t\t);\n\n}\nexport default ChequeBox;","import React from 'react';\n\nfunction Navigation({onRouteChange})\n{\n\t\t\n\t\treturn(\n\n\t\t\t<nav style={{display: 'flex', justifyContent: 'flex-end'}}>\n\t\t\t\t<p onClick={()=> onRouteChange('form')} className='f3 link dim dark-blue underline pa3 pointer'> Home </p>\n\n\t\t\t</nav>\n\t\t\t);\n\t\n}\n\nexport default Navigation;","import React from 'react';\nimport './App.css';\nimport InputForm from './components/InputForm';\nimport ChequeBox from './components/ChequeBox';\nimport Navigation from './components/Navigation';\nimport Particles from 'react-particles-js';\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 80,\n      density: {\n        enable: true,\n        value_area: 700\n      }\n    }\n  }\n}\n\nclass App extends React.Component{\n  constructor(){\n    super();\n    this.state ={\n      payee: '',\n      amount: '',\n      date:'',\n      amountInWords: '',\n      route: 'form',\n    }\n  }\n\n  displayCheque =(payee, amount, date, amountInWords) =>{\n    console.log(\"Button Click\");\n    this.setState({payee, amount, date, amountInWords}, () => {\n    console.log(this.state);\n  });\n  }\n\n  onRouteChange = (route) => {\n\n    this.setState({route: route});\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Particles className='particles'\n              params={particlesOptions}\n          />\n       { this.state.route === 'form'\n          ? <InputForm onDisplayCheque={this.displayCheque} onRouteChange={this.onRouteChange}/>\n          : <div>\n            <Navigation onRouteChange={this.onRouteChange} />\n            <ChequeBox payee={this.state.payee} amount={this.state.amount} amountInWords ={\n            this.state.amountInWords} date ={this.state.date} onRouteChange={this.onRouteChange} />\n          </div>\n       }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}